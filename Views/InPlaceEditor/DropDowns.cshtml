@{
    ViewBag.Title = "DropDowns";
}

@using Syncfusion.EJ2;
@using Syncfusion.EJ2.InPlaceEditor;
@using Syncfusion.EJ2.DropDowns;
@section ControlsSection{
<div class="col-lg-8 control-section inplace-control-section drop-down-layout">
    <div class="control_wrapper">
        <table>
            <tr>
                <td>
                    <label class="control-label">
                        DropDownList
                    </label>
                </td>
                <td>
                    @Html.EJS().InPlaceEditor("dropdownEle").Mode(RenderMode.Inline).Type(Syncfusion.EJ2.InPlaceEditor.InputType.DropDownList).Value("Canada").ActionOnBlur(ActionBlur.Submit).Model(ViewBag.dropdownData).Render()
                </td>
            </tr>
            <tr>
                <td>
                    <label class="control-label">
                        AutoComplete
                    </label>
                </td>
                <td>
                    @Html.EJS().InPlaceEditor("autoCompleteEle").Mode(RenderMode.Inline).Type(Syncfusion.EJ2.InPlaceEditor.InputType.AutoComplete).Value("Australia").ActionOnBlur(ActionBlur.Submit).Model(ViewBag.autocompleteData).Render()
                </td>
            </tr>
            <tr>
                <td>
                    <label class="control-label">
                        ComboBox
                    </label>
                </td>
                <td>
                    @Html.EJS().InPlaceEditor("comboBoxEle").Mode(RenderMode.Inline).Type(Syncfusion.EJ2.InPlaceEditor.InputType.ComboBox).Value("Finland").ActionOnBlur(ActionBlur.Submit).Model(ViewBag.comboData).Render()
                </td>
            </tr>
            <tr>
                <td>
                    <label class="control-label">
                        MultiSelect
                    </label>
                </td>
                <td>
                    @Html.EJS().InPlaceEditor("multiSelectEle").Mode(RenderMode.Inline).Type(Syncfusion.EJ2.InPlaceEditor.InputType.MultiSelect).Value( new string[] { "Canada","Bermuda" }).PopupSettings(new InPlaceEditorPopupSettings { Model = new { width= "auto" } }).Model(ViewBag.multiSelectData).Render()
                </td>
            </tr>
        </table>
    </div>
</div>
<div class="col-lg-4 property-section">
    <table id="property" title="Properties">
        <tr>
            <td style="width: 50%;">
                <div>Mode</div>
            </td>
            <td style="width: 50%;">
                @Html.EJS().DropDownList("editorMode").Width("90%").DataSource((IEnumerable<object>)ViewBag.modeData).Value("Inline").Change("changeEditorMode").Render()
            </td>
        </tr>
    </table>
</div>
}
<style>
       .inplace-control-section .control_wrapper  label {
            padding: 15px;
            text-align: left;
            font-weight: 400;
            font-size: 14px;
            margin-bottom: 0px;
        }

        .inplace-control-section .control_wrapper {
            margin: auto;
            max-width: 400px;
        }

        .inplace-control-section .control_wrapper table {
            margin: auto;
        }

        .inplace-control-section .control_wrapper table td {
            width: 200px;
            height: 100px;
        }
        .inplace-control-section.drop-down-layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide,
        .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide {
            display: block;
            visibility: hidden;
        }

</style>

@section PreScripts {
    <script>
        var editEle1 = document.getElementById("dropdownEle");
        var editEle2 = document.getElementById("autoCompleteEle");
        var editEle3 = document.getElementById("comboBoxEle");
        var editEle4 = document.getElementById("multiSelectEle");
        function changeEditorMode(e) {
            if (e.itemData.text === 'Popup') {
                editEle1.ej2_instances[0].mode = editEle2.ej2_instances[0].mode = editEle3.ej2_instances[0].mode = editEle4.ej2_instances[0].mode = 'Popup';
            } else {
                editEle1.ej2_instances[0].mode = editEle2.ej2_instances[0].mode = editEle3.ej2_instances[0].mode = editEle4.ej2_instances[0].mode = 'Inline';
            }
            editEle1.ej2_instances[0].dataBind();
            editEle2.ej2_instances[0].dataBind();
            editEle3.ej2_instances[0].dataBind();
            editEle4.ej2_instances[0].dataBind();
        }
        document.getElementById('right-pane').onscroll = function () {
            var mode = document.getElementById("editorMode")
            if (mode.ej2_instances[0].value === 'Inline') { return; }
            if (editEle1.querySelectorAll('.e-editable-open').length > 0)
                editEle1.ej2_instances[0].enableEditMode = false;
            if (editEle2.querySelectorAll('.e-editable-open').length > 0)
                editEle2.ej2_instances[0].enableEditMode = false;
            if (editEle3.querySelectorAll('.e-editable-open').length > 0)
                editEle3.ej2_instances[0].enableEditMode = false;
            if (editEle4.querySelectorAll('.e-editable-open').length > 0)
                editEle4.ej2_instances[0].enableEditMode = false;
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample demonstrates the usage of drop-down components such as AutoComplete, ComboBox, DropDownList, and MultiSelect. Click on the dotted input element to switch to the editable state of the corresponding integrated component.
    </p>
}
@section Description{
   <p>
    This sample illustrates the way to integrate drop-down components with <code>In-place Editor</code>. The
    applicable types of components are:
</p>
<p>
</p>
<ul>
    <li>
        <code>DropDownList</code>
    </li>
    <li>
        <code>AutoComplete</code>
    </li>
    <li>
        <code>ComboBox</code>
    </li>
    <li>
        <code>MultiSelect</code>
    </li>
</ul>
<p></p>
<p>
    The above components and their features are editable in place and can be customized with the model
    properties of the specific component.
</p>
<p>
    More information on the <code>In-place Editor</code> instantiation can be found in the&nbsp;<a target="_blank" href="https://ej2.syncfusion.com/documentation/inplaceeditor/getting-started.html">
        documentation section
    </a>.
</p>
}
