@using Syncfusion.EJ2
@using Syncfusion.EJ2.Spreadsheet

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().Spreadsheet("spreadsheet").Created("createdHandler").BeforeCellRender("beforeCellRenderHandler").Sheets(sheet =>
   {
       sheet.Name("EMI Calculator").IsProtected(true).Rows(row =>
       {
           row.Cells(cell => cell.Index(1).Value("Home Loan Calculator").Style(style =>
           {
               style.FontWeight(FontWeight.Bold).TextAlign(TextAlign.Center);
           }).Add()).Add();
           row.Cells(cell =>
                {
               cell.Index(1).Value("Loan Amount:").Add();
               cell.Format("$#,##0.00").Value("100000").Add();
           }).Add();
           row.Cells(cell =>
                {
               cell.Index(1).Value("Interest Rate:").Add();
               cell.Format("0.00%").Value("0.08").Add();
           }).Add();
           row.Cells(cell =>
                {
               cell.Index(1).Value("Periods (terms in year):").Add();
               cell.Value("1").Add();
           }).Add();
           row.Cells(cell =>
                {
               cell.Index(1).Value("Start Date:").Add();
               cell.Value("03-03-2020").Add();
           }).Add();
           row.Cells(cell =>
                {
               cell.Index(1).Value("Loan EMI:").Add();
               cell.Format("$#,##0.00").Value("8698.84").Add();
           }).Add();
           row.Cells(cell =>
                {
               cell.Index(1).Value("Number of Payments:").Add();
               cell.Value("12").Add();
           }).Add();
           row.Cells(cell =>
                {
               cell.Index(1).Value("Total Repayment Amount:").Add();
               cell.Format("$#,##0.00").Value("104386.11").Add();
           }).Add();
           row.Cells(cell =>
                {
               cell.Index(1).Value("Total Interest  Amount:").Add();
               cell.Format("$#,##0.00").Value("4386.11").Add();
           }).Add();
       }).Columns(column =>
       {
           column.Index(1).Width(190).Add();
           column.Width(100).Add();
       }).Add();
       sheet.IsProtected(true).Name("EMI Schedule").Ranges(ranges =>
            {
           ranges.DataSource(ViewBag.ProtectSheetData).ShowFieldAsHeader(true).Add();
           }).Columns(column =>
       {
           column.Index(1).Width(110).Add();
           column.Width(85).Add();
           column.Width(85).Add();
           column.Width(80).Add();
           column.Width(90).Add();
       }).Add();
   }).Render()
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Protect Sheet and lock cell Functionalities in ASP.NET Core Spreadsheet control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates protect sheet and lock cell feature with EMI calculation scenario as example.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, `EMI Schedule` sheet is locked using <code>isProtected</code> property.
        </p>
        <p>
            More information about protect sheet and lock cell feature can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/spreadsheet/getting-started">
                documentation
            </a> section.
        </p>
    </div>
}

<script>
    var numberFormat = ej.spreadsheet.getFormatFromType('Currency');
    function createdHandler() {
        //Applied style and number formatting to a range
        this.cellFormat({ fontWeight: 'bold', textAlign: 'center' }, 'EMI Schedule!A1:F1');
        this.numberFormat("$#,##0.00", 'EMI Schedule!C2:F13');
    }
    function beforeCellRenderHandler(args) {
        //Merged cells using custom code
        if (this.activeSheetIndex === 0 && args.address === 'B1') {
            args.element.colSpan = 2;
        }
    }
</script>

@*custom code start*@

<style>
    .control-section {
        height: 550px;
    }

    #sb-content .e-spreadsheet .e-tab .e-tab-text {
        display: inherit;
    }
</style>

@*custom code end*@
@section Title{
    <title>ASP.NET Core Spreadsheet Protect Sheet and lock cell Functionalities Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example for Protect Sheet and lock cell Functionalities in ASP.NET Core Spreadsheet Control</h1>
}