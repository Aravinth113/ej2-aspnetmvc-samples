@using Syncfusion.EJ2.PivotView
@section Meta{
    <meta name="description" content="This demo for Essential JS2 ASP.NET MVC Pivot Table control demonstrate integration of pivot table data into a simple chart widget" />
}
@section ControlsSection{

    <div class="col-lg-9 control-section" style="overflow:auto">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("300").DisplayOption(new PivotViewDisplayOption { View = View.Chart }).ShowFieldList(true).DataSource(dataSource => dataSource.Data((IEnumerable<object>)ViewBag.Data).ExpandAll(false)
            .EnableSorting(true).Rows(rows =>
            {
                rows.Name("Country").Add();
                rows.Name("Products").Add();
            })
            .Columns(columns =>
            {
                columns.Name("Year").Add();
                columns.Name("Order_Source").Caption("Order Source").Add();
            })
            .Values(values =>
            {
                values.Name("Amount").Caption("Sales Amount").Add();
            })
            .FormatSettings(formatsettings =>
            {
                formatsettings.Name("Amount").Format("C").Add();
            })
            .Filters(filters =>
            {
                filters.Name("Product_Categories").Caption("Product Categories").Add();
            })).ChartSettings(new PivotViewChartSettings { Title="Sales Analysis" , Load="onChartLoad" }).Render()
        </div>        
    </div>

    <div class="col-lg-3 property-section">
        <table id='property' title='Properties' class='property-panel-table' style="width: 100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                        <select id="charttypesddl" name="ddl-view-mode">
                            <option value='Line' selected>Line</option>
                            <option value='Column'>Column</option>
                            <option value='Bar'>Bar</option>
                            <option value='Spline'>Spline</option>
                            <option value='Area'>Area</option>
                            <option value='SplineArea'>SplineArea</option>
                            <option value='StepLine'>StepLine</option>
                            <option value='StepArea'>StepArea</option>
                            <option value='StackingColumn'>StackingColumn</option>
                            <option value='StackingBar'>StackingBar</option>
                            <option value='StackingArea'>StackingArea</option>
                            <option value='StackingColumn100'>StackingColumn100</option>
                            <option value='StackingBar100'>StackingBar100</option>
                            <option value='StackingArea100'>StackingArea100</option>
                            <option value='Scatter'>Scatter</option>
                            <option value='Bubble'>Bubble</option>
                            <option value='Polar'>Polar</option>
                            <option value='Radar'>Radar</option>
                            <option value='Pareto'>Pareto</option>
                        </select>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>
        function onChartLoad(args) {
            var selectedTheme = location.hash.split("/")[1];
            selectedTheme = selectedTheme ? selectedTheme : "Material";
            args.chart.theme = selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1);
        }
        var chartTypesDropDown = new ej.dropdowns.DropDownList({
            placeholder: "Chart Types",
            floatLabelType: "Auto",
            change: function(args) {
                var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
                pivotGridObj.chartSettings.chartSeries.type = args.value;
            }
        });
        chartTypesDropDown.appendTo("#charttypesddl");
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the basic rendering of the Chart control using pivot data. PivotTable Field List is also enabled to change the report at runtime.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this sample, the Pivot View component plots a chart widget based on the pivot report bound to it.
            This can be achieved by setting the property <code>displayOption.view</code> to <code>Chart</code>.
            The built-in options are:<br><br>

            <code>Table</code> -> Renders grid widget only, which is the default.<br>
            <code>Chart</code> -> Renders chart widget only.<br>
            <code>Both</code> -> Renders both grid and chart widget.<br>
        </p>
        <p>
            You can change the chart type using the Chart Types drop-down list separately.
            The chart types can be set using the <code>chartSettings.chartSeries.type</code>property.
            The built-in chart types are:<br><br>

            <code>Column</code><br>
            <code>Line</code><br>
            <code>Spline</code><br>
            <code>Bar</code><br>
            <code>Area</code><br>
            <code>StepArea</code><br>
            <code>SplineArea</code><br>
            <code>StackingColumn</code><br>
            <code>StackingArea</code><br>
            <code>StackingBar</code><br>
            <code>StepLine</code><br>
            <code>Pareto</code><br>
            <code>Bubble</code><br>
            <code>Scatter</code><br>
            <code>StackingColumn100</code><br>
            <code>StackingBar100</code><br>
            <code>StackingArea100</code><br>
            <code>Polar</code><br>
            <code>Radar</code><br><br>

            In the sample, the field list option is enabled, through which you can see the result in the chart by altering the report dynamically.
        </p>
    </div>
}
