@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
    <meta name="description" content="This demo for Essential JS2 ASP.NET MVC Pivot Table control demonstrate the toolbar feature of the pivotgrid widget" />
}
@section ControlsSection{

    <div class="col-lg control-section" id="pivot-grid-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("300").ShowToolbar(true).ShowFieldList(true).AllowExcelExport(true).AllowConditionalFormatting(true).AllowPdfExport(true).ShowToolbar(true).AllowCalculatedField(true).DataSource(dataSource => dataSource.Data((IEnumerable<object>)ViewBag.Data).ExpandAll(false).EnableSorting(true)
           .FormatSettings(formatsettings => { formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add(); })
           .Rows(rows => { rows.Name("Country").Add(); rows.Name("Products").Add(); })
           .Columns(columns => { columns.Name("Year").Add(); columns.Name("Order_Source").Caption("Order Source").Add(); })
           .Values(values =>
           {
               values.Name("In_Stock").Caption("In Stock").Add(); values.Name("Sold").Caption("Units Sold").Add();
               values.Name("Amount").Caption("Sold Amount").Add();
           })
           .Filters(filters =>
           {
               filters.Name("Product_Categories").Caption("Product Categories").Add();
           })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).DisplayOption(new PivotViewDisplayOption { View = View.Both }).Toolbar(new List<string>
                () { "New", "Save", "SaveAs", "Rename", "Remove", "Load",
                "Grid", "Chart", "Export", "SubTotal", "GrandTotal", "ConditionalFormatting", "FieldList"}).SaveReport("saveReport").LoadReport("loadReport").FetchReport("fetchReport").RenameReport("renameReport").RemoveReport("removeReport").NewReport("newReport").ToolbarRender("beforeToolbarRender").Render()
        </div>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        @@media only screen and (max-width: 400px) {
            #pivot-grid-section {
                overflow: auto;
            }
        }
    </style>
    <script>
        function saveReport(args) {
            var reports = [];
            var isSaved = false;
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reports = JSON.parse(localStorage.pivotviewReports);
            }
            if (args.report && args.reportName && args.reportName !== '') {
                reports.map(function (item) {
                    if (args.reportName === item.reportName) {
                        item.report = args.report;
                        isSaved = true;
                    }
                });
                if (!isSaved) {
                    reports.push(args);
                }
                localStorage.pivotviewReports = JSON.stringify(reports);
            }
        }
        function fetchReport(args) {
            var reportCollection = [];
            var reeportList = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                reeportList.push(item.reportName);
            });
            args.reportName = reeportList;
        }
        function loadReport(args) {
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                if (args.reportName === item.reportName) {
                    args.report = item.report;
                }
            });
            if (args.report) {
                pivotGridObj.dataSource = JSON.parse(args.report).dataSource;
            }
        }
        function removeReport(args) {
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            for (var i = 0; i < reportCollection.length; i++) {
                if (reportCollection[i].reportName === args.reportName) {
                    reportCollection.splice(i, 1);
                }
            }
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                localStorage.pivotviewReports = JSON.stringify(reportCollection);
            }
        }
        function renameReport(args) {
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                if (args.reportName === item.reportName) {
                    item.reportName = args.rename;
                }
            });
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                localStorage.pivotviewReports = JSON.stringify(reportCollection);
            }
        }
        function newReport() {
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            pivotGridObj.setProperties({
                dataSource: {
                    columns: [],
                    rows: [],
                    values: [],
                    filters: []
                }
            }, false);
        }
		function beforeToolbarRender(args) {
			args.customToolbar.splice(6, 0, {
				type: 'Separator' 
			});
			args.customToolbar.splice(9, 0, {
				type: 'Separator' 
			});
		}
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the toolbar options available in the pivot grid widget.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this sample, users can generate a report at runtime, as well as save and load them. Save and load operations are performed in
            <code>localStorage</code> (session storage) using the <code>saveReport</code> and <code>loadReport</code> events.
        </p>
        <p>
            Users can change the grid or chart view using the toggle option. Other toolbar options available are:
        </p>
        <ul>
            <li>Create new report.</li>
            <li>rename report.</li>
            <li>Remove report.</li>
            <li>Save as option.</li>
            <li>Hide subtotals and grand totals.</li>
            <li>Export to PDF, Excel, and CSV.</li>
            <li>PivotTable Field List.</li>
        </ul>
    </div>
}
