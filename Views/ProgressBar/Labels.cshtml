@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div class="row linear-parent">
            <div id="percentage" class="linear-progress">
                @(Html.EJS().ProgressBar("percentage").Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear).Value(100).ShowProgressValue(true)
                                                          .Width("90%").Height("60").CornerRadius(Syncfusion.EJ2.ProgressBar.CornerType.Round)
                                                          .ProgressColor("#2BB20E").TrackThickness(24).ProgressThickness(24).Minimum(0).Maximum(100)
                                                          .Animation(an => an.Enable(true).Delay(0).Duration(2000))
                                                          .Render())
            </div>
            <div id="ratio" class="linear-progress">
                @(Html.EJS().ProgressBar("ratio").Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear).Value(40).ShowProgressValue(true).TextRender("textRender2")
                                                               .Width("90%").Height("60").CornerRadius(Syncfusion.EJ2.ProgressBar.CornerType.Round)
                                                               .ProgressColor("#8D8989 ").TrackThickness(24).ProgressThickness(24).Minimum(0).Maximum(100)
                                                               .Animation(an => an.Enable(true).Delay(0).Duration(2000))
                                                               .Render())
            </div>
            <div id="acutal" class="linear-progress">
                @(Html.EJS().ProgressBar("acutal").Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear).Value(50).ShowProgressValue(true).TextRender("textRender3")
                                                               .Width("90%").Height("60").CornerRadius(Syncfusion.EJ2.ProgressBar.CornerType.Round)
                                                               .ProgressColor("#E3165B").TrackColor("#F8C7D8").TrackThickness(24).ProgressThickness(24).Minimum(0).Maximum(100)
                                                               .Animation(an => an.Enable(true).Delay(0).Duration(2000))
                                                               .Render())
            </div>
        </div>
        <div class="row linear-parent">
            <button id="reLoad" class="e-control e-btn e-lib e-outline e-primary">Reload</button>
        </div>
    </div>

    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }

        .linear-parent {
            text-align: center;
            margin-top: 2%;
        }

        .linear-progress {
            width: 60%;
            margin: auto;
            margin-bottom: 3%;
        }

        #percentage_linearLabel {
            fill: white;
        }

        #ratio_linearLabel {
            fill: white;
        }

        #acutal_linearLabel {
            fill: white;
        }

        #reLoad {
            border-radius: 4px;
            text-transform: capitalize;
        }
    </style>
    <script>
        var textRender2 = function (args) {
            args.text = '2/5';
        }
        var textRender3 = function (args) {
            args.text = '50';
        }
        var replayBtn = document.getElementById('reLoad');
        replayBtn.onclick = function () {
            var PercentProgress = document.getElementById('percentage').ej2_instances[0];
            var RatioProgress = document.getElementById('ratio').ej2_instances[0];
            var ActualProgress = document.getElementById('acutal').ej2_instances[0];
            PercentProgress.refresh();
            ActualProgress.refresh();
            RatioProgress.refresh();
        };
    </script>
    @*custom code end*@
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the Labels in ASP.NET MVC Progress Bar control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a linear progress bar to demonstrate different types of labels rendering.
    </p>
}
@section Description{
    <p>
        This demo for Essential JS2 Progress Bar control shows the linear progress bar with different labels format with help of <code>textRender</code> event.
    </p>
}
@section Title{
    <title>ASP.NET MVC Progress Bar Labels Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Labels in ASP.NET MVC Progress Bar Control</h1>
}
