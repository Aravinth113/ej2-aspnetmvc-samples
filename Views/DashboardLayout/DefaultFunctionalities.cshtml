@using Syncfusion.EJ2
@model EJ2MVCSampleBrowser.Controllers.DashboardLayoutController.spacingModel
@section ControlsSection{
    <div class="control-section">
        <div>
            <div style="padding:5px;text-align: end;">
                <button id="add" class="e-btn e-info">Add Panel</button>
            </div>
            @Html.EJS().DashboardLayout("defaultLayout").Columns(5).AllowResizing(true).CellSpacing(Model.cellSpacing).ContentTemplate(@<div>
                <div id="one" class="e-panel" data-row="0" data-col="0" data-sizeX="1" data-sizeY="1">
                    <span id="close" class="e-template-icon e-clear-icon"></span>
                    <div class="e-panel-container">
                        <div class="text-align">0</div>
                    </div>
                </div>
                <div id="two" class="e-panel" data-row="1" data-col="0" data-sizeX="1" data-sizeY="2">
                    <span id="close" class="e-template-icon e-clear-icon"></span>
                    <div class="e-panel-container">
                        <div class="text-align">1</div>
                    </div>
                </div>
                <div id="three" class="e-panel" data-row="0" data-col="1" data-sizeX="2" data-sizeY="2">
                    <span id="close" class="e-template-icon e-clear-icon"></span>
                    <div class="e-panel-container">
                        <div class="text-align">2</div>
                    </div>
                </div>
                <div id="four" class="e-panel" data-row="2" data-col="1" data-sizeX="1" data-sizeY="1">
                    <span id="close" class="e-template-icon e-clear-icon"></span>
                    <div class="e-panel-container">
                        <div class="text-align">3</div>
                    </div>
                </div>
                <div id="five" class="e-panel" data-row="2" data-col="2" data-sizeX="2" data-sizeY="1">
                    <span id="close" class="e-template-icon e-clear-icon"></span>
                    <div class="e-panel-container">
                        <div class="text-align">4</div>
                    </div>
                </div>
                <div id="six" class="e-panel" data-row="0" data-col="3" data-sizeX="1" data-sizeY="1">
                    <span id="close" class="e-template-icon e-clear-icon"></span>
                    <div class="e-panel-container">
                        <div class="text-align">5</div>
                    </div>
                </div>
                <div id="seven" class="e-panel" data-row="1" data-col="3" data-sizeX="1" data-sizeY="1">
                    <span id="close" class="e-template-icon e-clear-icon"></span>
                    <div class="e-panel-container">
                        <div class="text-align">6</div>
                    </div>
                </div>
                <div id="eight" class="e-panel" data-row="0" data-col="4" data-sizeX="1" data-sizeY="3">
                    <span id="close" class="e-template-icon e-clear-icon"></span>
                    <div class="e-panel-container">
                        <div class="text-align">7</div>
                    </div>
                </div>
            </div>).Render()
        </div>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var dashboardObject = document.getElementById('defaultLayout').ej2_instances[0];
        var count = 8;
        document.getElementById('add').onclick = function (e) {
            var panel = [{ 'id': count.toString() + '_layout', 'sizeX': 1, 'sizeY': 1, 'row': 0, 'col': 0, content: '<span id="close" class="e-template-icon e-clear-icon"></span><div class="text-align">' + count.toString() + '</div>' }];
            count = count + 1;
            dashboardObject.addPanel(panel[0]);
        };
        function onCloseIconHandler() {
            if (event.target.closest('.e-panel')) {
                dashboardObject.removePanel(event.target.closest('.e-panel').id);
            }
        }
        var closeElement = document.querySelectorAll('.e-clear-icon');
        for (var i = 0; i < closeElement.length; i++) {
            closeElement[i].addEventListener('click', onCloseIconHandler);
        }
    });
</script>

<style>
    #defaultLayout {
        padding: 10px;
    }

    .e-dashboardlayout.e-control .e-panel:hover span {
        display: block;
    }

    #defaultLayout .e-panel .e-panel-container .text-align {
        vertical-align: middle;
        font-weight: 600;
        font-size: 20px;
        text-align: center;
    }

    .e-template-icon {
        padding: 10px;
        float: right;
        display: none;
    }

    .e-clear-icon::before {
        content: '\e932';
        font-size: 12px;
        font-family: 'e-icons';
    }

    .text-align {
        line-height: 160px;
    }

    .e-clear-icon {
        position: absolute;
        right: 0;
        cursor: pointer;
    }

    .sb-demo-section .container-fluid {
        background: #E5E5E5;
    }
</style>

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the properties of DashboardLayout component from the property pane. Select any combination of properties from the property pane to customize the Dashboardlayout.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            This sample allows to configure the cellSize, cellSpacing, allowFloating and allowPushing properties of the dashboardlayout component.
        </p>
    </div>
}


