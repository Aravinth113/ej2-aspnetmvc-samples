@using Syncfusion.EJ2;
<script src="~/Scripts/StockChartData/goog.js"></script>
<script src="~/Scripts/StockChartData/googl.js"></script>
@section ControlsSection{
    <div class="control-section" style="width: auto">
        <div style="display:block">
            @(Html.EJS().StockChart("container").Load("load").Title("Multiple Series")
            .PrimaryXAxis(xaxis =>xaxis.MajorGridLines(mg=>mg.Width(0)
            ).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).CrosshairTooltip(ct=>ct.Enable(true)))
            .PrimaryYAxis(yaxis =>yaxis.MajorTickLines(mt=>mt.Color("transparent").Width(0)
            ).LineStyle(ls=>ls.Color("transparent")).CrosshairTooltip(ct=>ct.Enable(false)).Interval(40))
             .Series(sr =>
             {
                 sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).DataSource("data1").XName("x").YName("close").Add();
                 sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).DataSource("data2").XName("x").YName("close").Add();
             })
            .Crosshair(cr=>cr.Enable(true))
            .ChartArea(area => area.Border(br=>br.Width(0)))
            .Border(br => br.Width(0))
            .Render())
        </div>
    </div>
     @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
        #container {
            display: block;
        }

        #container_stock_border {
            pointer-events: none;
        }
    </style>
     @*custom code end*@
    <script>
        var data1 = window.goog;
        var data2 = window.googl;
        var load = function (args) {
           args.stockChart.indicatorType = [];
            args.stockChart.trendlineType = [];
             @*custom code start*@
            var selectedTheme = themeName ? themeName : 'Material';
            args.stockChart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark");
             @*custom code end*@
        }
    </script>
}
  @*custom code start*@
@section Meta{
    <meta name="description" content="This demo for Essential JS2 Stock Chart control shows how to render the default single series chart." />
}
  @*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes stock chart with multiple series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the Stock chart.
        <code>LineSeries</code> is used to represent selected data value.
    </p>
}