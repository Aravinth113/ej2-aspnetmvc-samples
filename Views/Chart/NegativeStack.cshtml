@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
      @Html.EJS().Chart("container-vertical").Series(series =>
 {
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingBar).XName("x").YName("y")
     .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ViewBag.font)))
     .DataSource(ViewBag.dataSource).Name("Female").Add();
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingBar).XName("x").YName("y")
    .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ViewBag.font)))
     .DataSource(ViewBag.dataSource1).Name("Male").Add();

      }).PrimaryXAxis(px => px.Title("Height in Inches").Interval(1)
      .MajorGridLines(mg=>mg.Width(0)).ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
       ).PrimaryYAxis(py => py.LabelFormat("{value} KG")
       .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
       .MajorGridLines(mg => mg.Width(0)).MajorTickLines(mt => mt.Width(0))
       .LineStyle(ls => ls.Width(0)).LabelStyle(ls=>ls.Color("transparent"))
       ).Title("Height vs Weight").ChartArea(area => area.Border(br=>br.Color("transparent"))
       ).LegendSettings(lg => lg.Position(Syncfusion.EJ2.Charts.LegendPosition.Right)
       ).Tooltip(tt => tt.Enable(true)).TooltipRender("tooltipRender").Load("load").Render()
 
        </div>
    </div>
 @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
     @*custom code end*@
    <script>
     @*custom code start*@
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark");
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        };
     @*custom code end*@
        var tooltipRender = function (args) {
            args.text = args.text.indexOf('-') > 0 ? args.text.replace('-', '') : args.text;
        };
    </script>
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This demo for Essential JS2 Chart control shows how to render and configure the bar charts." />
}
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates stacked bar with negative data points. Data points values are showed by using data label.
    </p>
}
@section Description{
    <p>
    In this example, you can see how to render and configure the bar type charts. Similar to column charts, but the orientation of y axis is horizontal instead of vertical.
    You can use <code>border</code>, <code>fill</code> properties to customize the data appearance. <code>dataLabel</code> is used to represent individual data and its value.
    </p>
    <p>
      Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
     <br>
        <p>
            More information on the bar series can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
        </p> 
}