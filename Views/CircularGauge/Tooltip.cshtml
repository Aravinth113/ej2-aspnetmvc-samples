@using Syncfusion.EJ2
@using Syncfusion.EJ2.CircularGauge
@section ControlsSection{

    <style>
        #templateWrap img {
            border-radius: 30px;
            width: 30px;
            height: 30px;
            margin: 0 auto;
        }
        #templateWrap {
            background: #fff;
            padding: 3px;
            border-radius: 2px;
        }
        #templateWrap .des {
            float: right;
            padding-left: 10px;
            line-height: 30px;
        }
    </style>
    
    <div class="control-section" style="margin-left:120px">
        @Html.EJS().CircularGauge("container").Load("gaugeLoad").EnablePointerDrag(true).TooltipRender("tooltipRender").Width("80%").Title("Tooltip Customization").Tooltip(new CircularGaugeTooltipSettings{Enable=true, EnableAnimation=false  }).TitleStyle(
     new CircularGaugeFont{ Size="15px", Color="grey", Opacity = 1 }).Axes(axes =>
   axes.EndAngle(120).StartAngle(240).LineStyle(new CircularGaugeLine{ Width = 0, Color = "transparent" }).Radius("90%")
.Minimum(0).Maximum(120).MajorTicks(new CircularGaugeTick{ Color="white", Offset=-5, Height=12 }).MinorTicks(new CircularGaugeTick{ Width=0, Color="transparent" })
.LabelStyle(new CircularGaugeLabel{ UseRangeColor = true , Font = new CircularGaugeFont { Size="13px", FontFamily="Roboto", Opacity = 1 }
}).Ranges(
    new List<Syncfusion.EJ2.CircularGauge.CircularGaugeRange> {
           new Syncfusion.EJ2.CircularGauge.CircularGaugeRange{
              Start = 0, End = 50 ,StartWidth ="10", EndWidth ="10",Radius = "102%",Color="#3A5DC8"
           },
            new Syncfusion.EJ2.CircularGauge.CircularGaugeRange{
              Start = 50, End = 120 ,StartWidth ="10", EndWidth ="10",Radius = "102%",Color="#33BCBD"
           }
    })
  .Pointers(
    new List<Syncfusion.EJ2.CircularGauge.CircularGaugePointer> {
           new Syncfusion.EJ2.CircularGauge.CircularGaugePointer
           {
               Value = 70,Radius = "60%" , MarkerHeight = 20 ,Color="#33BCBD",
               Cap = new CircularGaugeCap{ Radius=10, Border =new  CircularGaugeBorder{ Color="#33BCBD", Width=5 } },
               Animation = new CircularGaugeAnimation{ Enable=true, Duration=1500 }
           }
    }).Add()
).Render()
    </div>
    <script type="text/javascript">
        var gauge;
        function gaugeLoad(args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            gauge = args.gauge;
        }
        function tooltipRender(args) {
            var imageName = ((args.pointer.currentValue >= 0 && args.pointer.currentValue <= 50) ? 'range1' : 'range3');
            var borderColor = ((args.pointer.currentValue >= 0 && args.pointer.currentValue <= 50) ? '#3A5DC8' : '#33BCBD');
            args.tooltip.template = '<div id="templateWrap" style="border:2px solid ' + borderColor +
           '"><img src="../Content/CircularGauge/Images/' + imageName + '.png"/><div class="des" style="color: ' +
           borderColor + '"><span>${value} MPH</span></div></div>';
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample visualizes the tooltip of pointer value in gauge. To see the tooltip in action, hover pointer or tap the pointer.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This demo for Essential JS2 Circular Gauge control visualizes the tooltip template for circular gauge pointer." />
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to show the tooltip for pointer in gauge, to see the tooltip in action, hover pointer or
            tap on pointer in touch enabled devices.
        </p>
        <br>
        <p style="font-weight: 500">Injecting Module</p>
        <p>
            Circular gauge component features are segregated into individual feature-wise modules. To use tooltip, we need to inject
            <code>GaugeTooltip</code> module using CircularGauge.Inject(GaugeTooltip) method.
        </p>
        <p>
            More information on the tooltip can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation">documentation section</a>.
        </p>
    </div>
}
