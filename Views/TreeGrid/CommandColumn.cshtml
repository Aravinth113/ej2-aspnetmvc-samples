@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids
@{
    ViewBag.Title = "InlineEditing";
}

@section ControlsSection{
    <div class="control-section">
        @{

            List<object> commands = new List<object>();
            commands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit", cssClass = "e-flat" } });
            commands.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete", cssClass = "e-flat" } });
            commands.Add(new { type = "Save", buttonOption = new { iconCss = "e-icons e-update", cssClass = "e-flat" } });
            commands.Add(new { type = "Cancel", buttonOption = new { iconCss = "e-icons e-cancel-icon", cssClass = "e-flat" } });

            var dict = new Dictionary<string, object>();
            dict.Add("number", true);
            dict.Add("min", 0);

        }
        @(Html.EJS().TreeGrid("Editing")
            .DataSource((IEnumerable<object>)ViewBag.datasource)
            .EditSettings(edit =>
            {
                edit.AllowAdding(true);
                edit.AllowDeleting(true);
                edit.AllowEditing(true);
            })
            .Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })
            .Columns(col =>
            {
                col.Field("TaskId").HeaderText("Task ID").IsPrimaryKey(true).Width(80)
                    .ValidationRules(new { required = true, number = true })
                    .TextAlign(TextAlign.Right).Add();
                col.Field("TaskName").HeaderText("Task Name").EditType("stringedit").Width(200)
                    .ValidationRules(new { required = true }).Add();
                col.Field("StartDate").HeaderText("Start Date").Width(140).Format("yMd")
                    .EditType("datepickeredit")
                    .ValidationRules(new { date = true })
                    .TextAlign(TextAlign.Right).Add();
                col.Field("Duration").HeaderText("Duration").Width(90).EditType("numericedit")
                    .ValidationRules(dict)
                    .Edit(new { @params = new { format = "n" } })
                    .TextAlign(TextAlign.Right).Add();
                col.Field("Progress").HeaderText("Progress").Width(90).EditType("numericedit")
                    .ValidationRules(dict)
                    .Edit(new { @params = new { format = "n" } })
                    .TextAlign(TextAlign.Right).Add();
                col.HeaderText("Manage Records").Width("130").Commands(commands).Add();

            })
           .Height(400)
           .ChildMapping("Children")
           .TreeColumnIndex(1).Render());
    </div>
}

@section Meta{
    <meta name="description" content="This demo explains how to include CRUD action buttons as one of the columns in Essential JS2 TreeGrid control." />
}


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates CRUD operations in TreeGrid using command column. You can perform CRUD operations as follows,</p>
        <ul>
            <li><code>Edit</code> - To edit record, double click a row or click Edit button from command column after selected a row.</li>
            <li><code>Delete</code> - To delete record, click Delete button from command column after selected a row.</li>
            <li><code>Update, Cancel</code> - You can save or discard changes by click Update and Cancel button from command column respectively.</li>
        </ul>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The TreeGrid provides an option to render CRUD action buttons in a column by using the CommandColumn feature. The <code>Columns->Commands</code> property accepts array of CommandModel object. The predefined command button can be defined by using type property.
        </p>
        <p>The built-in command button are,</p>
        <ul>
            <li><code>Edit </code></li>
            <li><code>Delete</code></li>
            <li><code>Save</code></li>
            <li><code>Cancel</code></li>
        </ul>
        <p>
            More information on the command column configuration can be found in this documentation section .
        </p>
    </div>
}