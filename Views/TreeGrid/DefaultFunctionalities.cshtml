@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids
@{
    ViewBag.Title = "DefaultFunctionalities";
}

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().TreeGrid("DefaultFunctionalities").DataSource((IEnumerable<object>)ViewBag.datasource).Columns(col =>
       {
           col.Field("TaskId").HeaderText("Task ID").Width(90).TextAlign(TextAlign.Right).Add();
           col.Field("TaskName").HeaderText("Task Name").Width(180).Add();
           col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(120).Add();
           col.Field("EndDate").HeaderText("End Date").Format("yMd").TextAlign(TextAlign.Right).Width(120).Add();
           col.Field("Duration").HeaderText("Duration").Width(90).TextAlign(TextAlign.Right).Add();
           col.Field("Progress").HeaderText("Progress").Width(90).TextAlign(TextAlign.Right).Add();

       }).Height(400).ChildMapping("Children").TreeColumnIndex(1).Render()
    </div>
}

@section Meta{
    <meta name="description" content="This example shows how the Essential JS2 TreeGrid Control looks with its default configuration." />
}


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the default rendering of the TreeGrid with minimum configuration.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The TreeGrid is used to represent the hierarchical data in a tabular format, 
            combining the visual representation of Grid and TreeView controls. 
            It represents the data from <code>Datasource</code>.  Such as an array of JSON objects, OData web services, or 
            <code>DataManager</code> binding data fields to columns or self-referential datasource.
        </p>
        <p>
            In this demo, the TreeGrid is populated with its minimum default settings.
            More information on the TreeGrid instantiation can be found in this documentation section.
        </p>
    </div>
}