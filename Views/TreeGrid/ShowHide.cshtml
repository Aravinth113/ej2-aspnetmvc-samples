@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewBag.Title = "ShowHide";
}

@*custom code end*@

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-section">
        @Html.EJS().TreeGrid("ShowHide").DataSource((IEnumerable<object>)ViewBag.datasource).Columns(col =>
       {
           col.Field("TaskId").HeaderText("Task ID").Width(80).TextAlign(TextAlign.Right).Add();
           col.Field("TaskName").HeaderText("Task Name").Width(200).Add();
           col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(105).Add();
           col.Field("Duration").HeaderText("Duration").Width(81).TextAlign(TextAlign.Right).Add();
           col.Field("Progress").HeaderText("Progress").Width(84).TextAlign(TextAlign.Right).Add();

       }).Height(400).ChildMapping("Children").TreeColumnIndex(1).Render()
    </div>
    </div>
      <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td style="width: 30%">
                    <div>Column</div>
                </td>
                <td style="width: 70%;padding-right: 10px">
                    @Html.EJS().DropDownList("dropdown").DataSource((IEnumerable<object>)ViewBag.columns).Value("TaskId").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "text", Value = "value" }).Change("onChange").Render()
                </td>
            </tr>
        <tr>
            <td class="left-side" style="width: 30%; padding-bottom:10px; padding-left: 10px;">
                @Html.EJS().Button("hide").Content("HIDE").Render()
            </td>
            <td style="padding-bottom:10px; width: 70;">
                @Html.EJS().Button("show").Disabled(true).Content("SHOW").Render()
            </td>
        </tr>
                <tr>
            <td style="width: 50%">
                <div style="padding-top: 10px">
                    Hidden Columns
                </div>
            </td>
            <td style="width: 50%; padding:10px 10px 0px 0px">
                    <textarea id="hiddencolumns" style="resize: none;height:65px;background-color: #fff; padding: 6px" 
                    class="form-control" readonly="readonly"></textarea>
            </td>
        </tr>
        </table>
    </div>
    <script>
        function onChange(args) {
            var treegrid = document.getElementById("ShowHide").ej2_instances[0];
          let columnName = args.value;
            let column = treegrid.getColumnByField(columnName);
            if (column.visible === undefined || column.visible) {
                show.disabled = true;
                hide.disabled = false;
            } else {
                hide.disabled = true;
                show.disabled = false;
            }
        }
    var hiddenColumns = document.getElementById('hiddencolumns');
    document.getElementById('show').addEventListener('click', () => {
         var treegrid = document.getElementById("ShowHide").ej2_instances[0];
        var dropDownListObject = document.getElementById("dropdown").ej2_instances[0];
        var columnName = dropDownListObject.value;
        var column = treegrid.getColumnByField(columnName);
        treegrid.showColumns(column.headerText, 'headerText');
        show.disabled = true;
        hide.disabled = false;
        hiddenColumns.value = hiddenColumns.value.replace(column.headerText + '\n', '');
    });
    document.getElementById('hide').addEventListener('click', () => {
         var treegrid = document.getElementById("ShowHide").ej2_instances[0];
        var dropDownListObject = document.getElementById("dropdown").ej2_instances[0];
        var columnName = dropDownListObject.value;
        var column = treegrid.getColumnByField(columnName);
        if (treegrid.getHeaderTable().querySelectorAll('th.e-hide').length === 3) {
            alert('Atleast one Column should be visible');
        } else {
            treegrid.hideColumns(column.headerText, 'headerText');
            hide.disabled = true;
            show.disabled = false;
            hiddenColumns.value = hiddenColumns.value + column.headerText + '\n';
        }
    });
    </script>
}

@*custom code start*@

@section Meta{
    <meta name="description" content="This demo explains how to hide or show the columns of treegrid dynamically using Syncfusion Essential JS2 TreeGrid methods ." />
}


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates dynamic show/hide columns feature of TreeGrid.
       Select column name from the properties panel and click hide/show to toggle visibility.
</p>
    </div>
}

@section Description{
    <div id="description">
 <p>The TreeGrid column can be showed/hidden dynamically using <code>showColumns
        </code> and <code>hideColumns</code> methods.</p>
    <p>In this demo, the columns can be showed and hidden by selecting the column name in the dropdown
        and click the Show or Hide buttons to toggle visibility. And the column`s visibility is toggled based on the 
        <code>Columns->HeaderText</code> value.</p>
    <br/>
    <p>The <code>Columns->Visible</code> property specifies the visibility of a column. 
    To hide a column at the initial rendering, set the <code>Columns->Visible</code> property to false.</p>

    </div>
}

@*custom code end*@