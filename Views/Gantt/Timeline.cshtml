@using Syncfusion.EJ2
@{
    ViewBag.Title = "Timeline";
}
@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div class="control-section">
                @(Html.EJS().Gantt("Timeline").DataSource((IEnumerable<object>)ViewBag.DataSource)
                    .TaskFields(ts => ts.Id("TaskId").Name("TaskName").StartDate("StartDate").EndDate("EndDate")
                    .Duration("Duration").Progress("Progress").Dependency("Predecessor").Child("SubTasks").Notes("Info").ResourceInfo("ResourceId"))
                    .Height("450px").HighlightWeekends(true).ProjectStartDate("02/03/2019").ProjectEndDate("03/23/2019")
                    .ResourceNameMapping("ResourceName").ResourceIDMapping("ResourceId")
                    .TimelineSettings(ts => ts.TopTier(tt => tt.Format("MMM dd, yyyy").Unit(Syncfusion.EJ2.Gantt.TimelineViewMode.Week))
                    .BottomTier(bt => bt.Unit(Syncfusion.EJ2.Gantt.TimelineViewMode.Day)))
                    .SplitterSettings(ss => ss.ColumnIndex(0)).TreeColumnIndex(1).LabelSettings(ls => ls.RightLabel("TaskName"))
                    .EventMarkers(em =>
                    {
                        em.Day("02/08/2019").Label("Project kick-off").Add();
                    })
                    .Resources(ViewBag.Resources)
                    .Render()
                )
            </div>
        </div>
    </div>

    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <colgroup>
                <col style="width:30%" />
                <col style="width:70%" />
            </colgroup>
            <tr>
                <td style="width:30%;"><div><b>Top tier</b></div></td>
                <td style="width:70%;">
                    <div>
                        @Html.EJS().CheckBox("TopTierCheck").Checked(true).Change("TopTierChange").Render()
                    </div>
                </td>
            </tr>

            <tr>
                <td style="width:30%;"> <div style="padding-top: 8px">Count</div></td>
                <td style="width:70%;">
                    <div>
                        @Html.EJS().NumericTextBox("TopTierCount").Format("##").Min(1).Max(50).Value(1).Change("TopCountChange").Render()
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width:30%;">
                    <div>
                        Unit
                    </div>
                </td>
                <td style="width:70%;">
                    <div>
                        @(Html.EJS().DropDownList("TopTierUnit").DataSource((IEnumerable<Object>)ViewBag.Units)
                            .Fields(fs => fs.Text("Unit").Value("Id")).Value("Week").Change("TopUnitChange").Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width:30%;">
                    <div>
                        Format
                    </div>
                </td>
                <td style="width:70%;">
                    <div>
                        @(Html.EJS().DropDownList("TopTierFormat").DataSource((IEnumerable<Object>)ViewBag.WeekFormat)
                              .Fields(fs => fs.Text("Format").Value("Id")).Value("MMM dd, yyyy").Change("TopFormatChange").Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width:30%;">
                    <div><b>Bottom tier</b></div>
                </td>
                <td style="width:70%;">
                    <div>
                        @Html.EJS().CheckBox("BottomTierCheck").Checked(true).Change("BottomTierChange").Render()
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width:30%;">
                    <div>Count</div>
                </td>
                <td style="width:70%;">
                    <div>
                        @Html.EJS().NumericTextBox("BottomTierCount").Format("##").Min(1).Max(50).Value(1).Change("BottomCountChange").Render()
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width:30%;">
                    <div>
                        Unit
                    </div>
                </td>
                <td style="width:70%;">
                    <div>
                        @(Html.EJS().DropDownList("BottomTierUnit").DataSource((IEnumerable<Object>)ViewBag.Units)
                            .Fields(fs => fs.Text("Unit").Value("Id")).Value("Day").Change("BottomUnitChange").Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width:30%;">
                    <div>
                        Format
                    </div>
                </td>
                <td style="width:70%;">
                    <div>
                        @(Html.EJS().DropDownList("BottomTierFormat").DataSource((IEnumerable<Object>)ViewBag.DayFormat)
                            .Fields(fs => fs.Text("Format").Value("Id")).Change("BottomFormatChange").Render()
                        )
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <script>
        function TopTierChange() {
            var checkBox = document.getElementById("TopTierCheck").ej2_instances[0];
            var gantt = document.getElementById("Timeline").ej2_instances[0];
            var topTierCount = document.getElementById("TopTierCount").ej2_instances[0];
            var topTierformat = document.getElementById("TopTierFormat").ej2_instances[0];
            var topTierUnit = document.getElementById("TopTierUnit").ej2_instances[0];
            if (checkBox.checked) {
                gantt.timelineSettings.topTier.unit = 'Week';
                topTierCount.enabled = true;
                topTierformat.enabled = true;
                topTierUnit.enabled = true;
            } else {
                gantt.timelineSettings.topTier.unit = 'None';
                topTierCount.enabled = false;
                topTierformat.enabled = false;
                topTierUnit.enabled = false;
            }
        }

        function BottomTierChange() {
            var checkBox = document.getElementById("BottomTierCheck").ej2_instances[0];
            var gantt = document.getElementById("Timeline").ej2_instances[0];
            var bottomTierCount = document.getElementById("BottomTierCount").ej2_instances[0];
            var bottomTierformat = document.getElementById("BottomTierFormat").ej2_instances[0];
            var bottomTierUnit = document.getElementById("BottomTierUnit").ej2_instances[0];
            if (checkBox.checked) {
                gantt.timelineSettings.bottomTier.unit = 'Day';
                bottomTierCount.enabled = true;
                bottomTierformat.enabled = true;
                bottomTierUnit.enabled = true;
            } else {
                gantt.timelineSettings.bottomTier.unit = 'None';
                bottomTierCount.enabled = false;
                bottomTierformat.enabled = false;
                bottomTierUnit.enabled = false;
            }
        }

        function TopCountChange(args) {
            var gantt = document.getElementById("Timeline").ej2_instances[0];
            var count = args.value;
            gantt.timelineSettings.topTier.count = count;
        }

        function BottomCountChange(args) {
            var gantt = document.getElementById("Timeline").ej2_instances[0];
            var count = args.value;
            gantt.timelineSettings.bottomTier.count = count;
        }

        function TopFormatChange(args) {
            var format = args.value;
            var gantt = document.getElementById("Timeline").ej2_instances[0];
            gantt.timelineSettings.topTier.format = format.toString();
        }

        function BottomFormatChange(args) {
            var format = args.value;
            var gantt = document.getElementById("Timeline").ej2_instances[0];
            gantt.timelineSettings.bottomTier.format = format.toString();
        }


        function TopUnitChange(args) {
            var unit = args.value;
            var gantt = document.getElementById("Timeline").ej2_instances[0];
            var topFormatDropDown = document.getElementById("TopTierFormat").ej2_instances[0];
            gantt.timelineSettings.topTier.unit = unit;
            if (unit === 'Year') {
                topFormatDropDown.dataSource = yearformat;
            } else if (unit === 'Month') {
                topFormatDropDown.dataSource = monthformat;
            } else if (unit === 'Week') {
                topFormatDropDown.dataSource = weekformat;
            } else if (unit === 'Day') {
                topFormatDropDown.dataSource = dayformat;
            } else {
                topFormatDropDown.dataSource = hourformat;
            }
            topFormatDropDown.refresh();
        }

        function BottomUnitChange(args) {
            var unit = args.value;
            var gantt = document.getElementById("Timeline").ej2_instances[0];
            var bottomFormatDropDown = document.getElementById("BottomTierFormat").ej2_instances[0];
            gantt.timelineSettings.bottomTier.unit = unit;
            if (unit === 'Year') {
                bottomFormatDropDown.dataSource = yearformat;
            } else if (unit === 'Month') {
                bottomFormatDropDown.dataSource = monthformat;
            } else if (unit === 'Week') {
                bottomFormatDropDown.dataSource = weekformat;
            } else if (unit === 'Day') {
                bottomFormatDropDown.dataSource = dayformat;
            } else {
                bottomFormatDropDown.dataSource = hourformat;
            }
            bottomFormatDropDown.refresh();
        }

        var yearformat = [
            { Id: 'MMM "yy', Format: 'Jan "18' },
            { Id: 'y', Format: '2018' },
            { Id: 'MMMM, y', Format: 'January, 18' },
        ];
        var monthformat = [
            { Id: 'MMM dd, yyyy', Format: 'Jan 01, 2018' },
            { Id: 'MMMM', Format: 'January' },
            { Id: 'MMM', Format: 'Jan' },
        ];
        var weekformat = [
            { Id: 'MMM dd, yyyy', Format: 'Jan 01, 2019' },
            { Id: 'EEE MMM dd, "yy', Format: 'Mon Jan 01, "19' },
            { Id: 'EEE MMM dd', Format: 'Mon Jan 01' },
        ];
        var dayformat = [
            { Id: 'EEE, dd', Format: 'Mon, 01' },
            { Id: 'E', Format: 'Mon' },
            { Id: 'dd', Format: '01' },
        ];
        var hourformat = [
            { Id: 'hh', Format: '00' },
            { Id: 'hh : mm a', Format: '00 : 00 AM' },
            { Id: 'h : mm a', Format: '0 : 00 AM' },
        ];
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates the different phases from planning to delivery, involved in a software development lifecycle. It demonstrates the different timeline modes available in the Gantt chart. Options are available to change the unit, format, and count of the header texts for both top and bottom timeline headers
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the various timeline mode options and properties available to customize the timeline in Gantt" />
}

@section Description{
    <div id="description">
        <p>
            In this example, you can see how to change the timeline settings in Gantt chart. The top and bottom timeline
            header texts can be customized by using the <code>TimelineSettings.TopTier</code> and <code>TimelineSettings.BottomTier</code> properties.
            Using these properties, you can change the format, count, and units of the timeline header texts.
        </p>
        <p></p>
        Gantt chart has built-in support for many timeline modes such as minutes, hour, day, week, month and year.
        </p>
        <p>
            The default timeline headers can also be replaced with custom header texts by using the <code>Formatter</code> property.
        </p>
        <p>
            Tooltip is enabled by default for the timeline headers, to see the tooltip in action, hover a point or tap on a
            point in touch enabled devices.
        </p>
        <p style="font-weight: 500">Injecting Module:</p>
        <p>
            Gantt component features are segregated into individual feature-wise modules. To use a selection, inject the
            Selection module using the <code>Gantt.Inject(Selection)</code> method, and use a sort by injecting the Sort
            module using
            the <code>Gantt.Inject(Sort)</code> method. To use markers, inject the
            DayMarkers module using the <code>Gantt.Inject(DayMarkers)</code> method.
        </p>
    </div>
}