@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule

@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").Height("650px").Views(ViewBag.view).EventSettings(new ScheduleEventSettings { DataSource = ViewBag.datasource }).Render()
        </div>
    </div>
    <style>
        .e-schedule .e-read-only {
            opacity: .8;
        }
    </style>

}
@section Meta{
    <meta name="description" content="This demo for Essential JS2 Scheduler control shows how to make specific events on the scheduler to be displayed in a read-only mode." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo showcases how to make specific events on the Scheduler to be displayed in a read-only mode. The read-only events
            can be simply viewed and prevented from undergoing any edit actions.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, the events that has occurred on the past hours from the current time are made as read-only and
            the CRUD actions has been prevented on it. This has been done by setting <code>true</code> to the <code>IsReadonly</code> field of
            past events. By doing so, the <code>aria-readonly</code> attribute gets added into the event element and differentiate it
            from the other normal events.
        </p>
    </div>
}
